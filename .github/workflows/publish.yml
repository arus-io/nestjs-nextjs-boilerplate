name: Publish
on:
  push:
    branches:
      - master
jobs:

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env to production
        run: |
          echo "EKS_CLUSTER=demo-prod" >> $GITHUB_ENV
          echo "NAMESPACE_NAME=prod" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}-prod" >> $GITHUB_ENV
          echo "SITE_DOMAIN=arus.io" >> $GITHUB_ENV

      - name: Configure AWS credentials - Prod
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demo-prod #@TODO: move to var
        run: |
          docker build --build-arg site_domain=$SITE_DOMAIN --build-arg api_domain=$SITE_DOMAIN  -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push image to Amazon ECR
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demo-prod #@TODO: move to var
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Setup kubeconfig
        id: setup-kubeconfig
        run: |
          aws eks --region us-west-2 update-kubeconfig --name $EKS_CLUSTER

      - name: Helm Deploy
        id: helm-deploy
        #@TODO: move to var
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
          helm upgrade demo charts/demo --install --create-namespace --namespace=$NAMESPACE_NAME -f charts/demo/values.yaml -f charts/demo/values/$NAMESPACE_NAME.yaml --set image.tag=$IMAGE_TAG

